{"remainingRequest":"D:\\web\\react-ritch-markdown\\node_modules\\thread-loader\\dist\\cjs.js??ref--5-1!D:\\web\\react-ritch-markdown\\node_modules\\babel-loader\\lib\\index.js??ref--5-2!D:\\web\\react-ritch-markdown\\node_modules\\source-map-loader\\index.js!D:\\web\\react-ritch-markdown\\src\\editor\\richText\\index.jsx","dependencies":[{"path":"D:\\web\\react-ritch-markdown\\src\\editor\\richText\\index.jsx","mtime":1609924853225},{"path":"D:\\web\\react-ritch-markdown\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web\\react-ritch-markdown\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\web\\react-ritch-markdown\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\web\\react-ritch-markdown\\node_modules\\source-map-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/web/react-ritch-markdown/src/editor/richText/index.jsx"],"names":["React","Upload","message","BraftEditor","ContentUtils","FolderAddOutlined","PictureOutlined","Axios","Table","options","withDropdown","columnResizable","exportAttrString","use","RichTexts","props","uploadImageChange","info","editorState","file","status","data","insertMedias","type","url","response","setState","getValue","toHTML","error","uploadFileChange","insertHTML","file_name","onChange","clearContent","clear","state","myUploadFn","param","obj","FormData","append","name","post","then","res","code","success","meta","id","title","alt","console","log","err","msg","createEditorState","defaultValue","extendControls","key","component","prevProps","uploadFn","Component","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,mBAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAO,6BAAP;AACA,OAAO,iCAAP;AAEA,OAAO,cAAP;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,YAAY,EAAE,IADA;AACM;AACpBC,EAAAA,eAAe,EAAE,IAFH;AAES;AACvBC,EAAAA,gBAAgB,EAAE,8CAHJ,CAGoD;;AAHpD,CAAhB;AAMAT,WAAW,CAACU,GAAZ,CAAgBL,KAAK,CAACC,OAAD,CAArB;;IACMK,S;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UA8DnBC,iBA9DmB,GA8DC,UAACC,IAAD,EAAOC,WAAP,EAAuB;AACzC,UAAID,IAAI,CAACE,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC/B;AACA,YAAIC,IAAI,GAAGjB,YAAY,CAACkB,YAAb,CAA0BJ,WAA1B,EAAuC,CAChD;AAAEK,UAAAA,IAAI,EAAE,OAAR;AAAiBC,UAAAA,GAAG,EAAEP,IAAI,CAACE,IAAL,CAAUM,QAAV,CAAmBJ,IAAnB,CAAwBG;AAA9C,SADgD,CAAvC,CAAX;;AAGA,cAAKE,QAAL,CAAc;AAAER,UAAAA,WAAW,EAAEG;AAAf,SAAd,EAL+B,CAM/B;;;AACA,cAAKN,KAAL,CAAWY,QAAX,CAAoBN,IAAI,CAACO,MAAL,EAApB;AACD,OARD,MAQO,IAAIX,IAAI,CAACE,IAAL,CAAUC,MAAV,KAAqB,OAAzB,EAAkC;AACvClB,QAAAA,OAAO,CAAC2B,KAAR,CAAc,QAAd;AACD;AACF,KA1EkB;;AAAA,UA6EnBC,gBA7EmB,GA6EA,UAACb,IAAD,EAAOC,WAAP,EAAuB;AACxC,UAAID,IAAI,CAACE,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC/B;AACA,YAAIC,IAAI,GAAGjB,YAAY,CAAC2B,UAAb,CACTb,WADS,wCAEmBD,IAAI,CAACE,IAAL,CAAUM,QAAV,CAAmBJ,IAAnB,CAAwBG,GAF3C,gBAEmDP,IAAI,CAACE,IAAL,CAAUM,QAAV,CAAmBJ,IAAnB,CAAwBW,SAF3E,UAAX;;AAKA,cAAKN,QAAL,CAAc;AAAER,UAAAA,WAAW,EAAEG;AAAf,SAAd,EAP+B,CAQ/B;;;AACA,cAAKN,KAAL,CAAWY,QAAX,CAAoBN,IAAI,CAACO,MAAL,EAApB;AACD,OAVD,MAUO,IAAIX,IAAI,CAACE,IAAL,CAAUC,MAAV,KAAqB,OAAzB,EAAkC;AACvClB,QAAAA,OAAO,CAAC2B,KAAR,CAAc,QAAd;AACD;AACF,KA3FkB;;AAAA,UA8FnBI,QA9FmB,GA8FR,UAACf,WAAD,EAAiB;AAC1B,YAAKQ,QAAL,CACE;AACER,QAAAA,WAAW,EAAEA;AADf,OADF,EAIE,MAAKH,KAAL,CAAWY,QAAX,CAAoBT,WAAW,CAACU,MAAZ,EAApB,CAJF;AAMD,KArGkB;;AAAA,UAwGnBM,YAxGmB,GAwGJ,YAAM;AACnB,YAAKR,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAEd,YAAY,CAAC+B,KAAb,CAAmB,MAAKC,KAAL,CAAWlB,WAA9B;AAAf,OAAd;AACD,KA1GkB;;AAAA,UA6GnBmB,UA7GmB,GA6GN,UAACC,KAAD,EAAW;AACtB,UAAIC,GAAG,GAAG,IAAIC,QAAJ,EAAV;AACAD,MAAAA,GAAG,CAACE,MAAJ,CAAW,MAAX,EAAmBH,KAAK,CAACnB,IAAN,CAAWuB,IAA9B;AACAH,MAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBH,KAAK,CAACnB,IAAtB;AACAZ,MAAAA,KAAK,CAACoC,IAAN,CAAW,iBAAX,EAA8BJ,GAA9B,EACGK,IADH,CACQ,UAACC,GAAD,EAAS;AACb,YAAIA,GAAG,CAACxB,IAAJ,IAAYwB,GAAG,CAACxB,IAAJ,CAASyB,IAAT,KAAkB,CAAlC,EAAqC;AACnC,cAAIzB,IAAI,GAAGwB,GAAG,CAACxB,IAAJ,CAASA,IAApB;AACAiB,UAAAA,KAAK,CAACS,OAAN,CAAc;AACZvB,YAAAA,GAAG,EAAEH,IAAI,CAACG,GADE;AAEZwB,YAAAA,IAAI,EAAE;AACJC,cAAAA,EAAE,EAAE5B,IAAI,CAAC4B,EADL;AAEJC,cAAAA,KAAK,EAAE7B,IAAI,CAACqB,IAFR;AAGJS,cAAAA,GAAG,EAAE9B,IAAI,CAACqB;AAHN;AAFM,WAAd;AAQD;;AACDU,QAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACD,OAdH,WAeS,UAACS,GAAD,EAAS;AACdhB,QAAAA,KAAK,CAACT,KAAN,CAAY;AACV0B,UAAAA,GAAG,EAAE;AADK,SAAZ;AAGD,OAnBH;AAoBD,KArIkB;;AAEjB,UAAKnB,KAAL,GAAa;AACXlB,MAAAA,WAAW,EAAEf,WAAW,CAACqD,iBAAZ,CAA8B,IAA9B,CADF;AAEXC,MAAAA,YAAY,EAAEtD,WAAW,CAACqD,iBAAZ,CAA8B,IAA9B;AAFH,KAAb;AAKA,UAAKE,cAAL,GAAsB,CACpB;AACEC,MAAAA,GAAG,EAAE,eADP;AAEEpC,MAAAA,IAAI,EAAE,WAFR;AAGEqC,MAAAA,SAAS,eACP,oBAAC,MAAD;AACE,QAAA,MAAM,EAAC,iBADT;AAEE,QAAA,MAAM,EAAC,SAFT;AAGE,QAAA,QAAQ,EAAE,kBAAC3C,IAAD;AAAA,iBACR,MAAKD,iBAAL,CAAuBC,IAAvB,EAA6B,MAAKmB,KAAL,CAAWlB,WAAxC,CADQ;AAAA,SAHZ;AAME,QAAA,cAAc,EAAE,KANlB;AAOE,QAAA,IAAI,EAAC,GAPP;AAQE,QAAA,IAAI,EAAE;AACJwB,UAAAA,IAAI,EAAE;AADF,SARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAaE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,mCAFZ;AAGE,sBAAW,0BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CAbF;AAJJ,KADoB,EA4BpB;AACEiB,MAAAA,GAAG,EAAE,gBADP;AAEEpC,MAAAA,IAAI,EAAE,WAFR;AAGEqC,MAAAA,SAAS,eACP,oBAAC,MAAD;AACE,QAAA,MAAM,EAAC,iBADT;AAEE,QAAA,QAAQ,EAAE,kBAAC3C,IAAD;AAAA,iBACR,MAAKa,gBAAL,CAAsBb,IAAtB,EAA4B,MAAKmB,KAAL,CAAWlB,WAAvC,CADQ;AAAA,SAFZ;AAKE,QAAA,IAAI,EAAC,GALP;AAME,QAAA,cAAc,EAAE,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,mCAFZ;AAGE,sBAAW,0BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CATF;AAJJ,KA5BoB,CAAtB;AAPiB;AA2DlB,G,CAED;;;;;uCA0EmB2C,S,EAAW;AAC5B,UAAIA,SAAS,CAACJ,YAAV,KAA2B,KAAKrB,KAAL,CAAWqB,YAA1C,EAAwD;AACtD,aAAK/B,QAAL,CAAc;AACZR,UAAAA,WAAW,EAAEf,WAAW,CAACqD,iBAAZ,CAA8BK,SAAS,CAACJ,YAAxC,CADD;AAEZA,UAAAA,YAAY,EAAEI,SAAS,CAACJ;AAFZ,SAAd;AAID;AACF;;;6BAEQ;AAAA,UACCvC,WADD,GACiB,KAAKkB,KADtB,CACClB,WADD;AAEP,0BACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAEA,WADT;AAEE,QAAA,QAAQ,EAAE,KAAKe,QAFjB;AAGE,QAAA,KAAK,EAAE;AACL6B,UAAAA,QAAQ,EAAE,KAAKzB;AADV,SAHT;AAME,QAAA,EAAE,EAAC,WANL;AAOE,QAAA,cAAc,EAAE,KAAKqB,cAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAaD;;;;;;;;;;;EAhKqB1D,KAAK,CAAC+D,S;;AAmK9BjD,SAAS,CAACkD,YAAV,GAAyB;AACvBrC,EAAAA,QAAQ,EAAE,kBAACN,IAAD,EAAU;AAClB,WAAOA,IAAP;AACD,GAHsB;AAIvBoC,EAAAA,YAAY,EAAC;AAJU,CAAzB;eAOe3C,S;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAjLML,O;0BAOAK,S","sourcesContent":["/*\r\n * @Autor: Clairoll\r\n * @Date: 2020-08-25 15:17:35\r\n * @LastEditTime: 2021-01-06 16:32:46\r\n * @Email: 1755033445@qq.com\r\n * @description: 富文本编辑器\r\n */\r\nimport React from \"react\";\r\nimport { Upload, message } from \"antd\";\r\nimport BraftEditor from \"braft-editor\";\r\nimport { ContentUtils } from \"braft-utils\";\r\nimport { FolderAddOutlined, PictureOutlined } from \"@ant-design/icons\";\r\nimport Axios from \"axios\";\r\nimport Table from \"braft-extensions/dist/table\";\r\nimport \"braft-editor/dist/index.css\";\r\nimport \"braft-extensions/dist/table.css\";\r\n\r\nimport \"./index.less\";\r\n\r\nconst options = {\r\n  withDropdown: true, // 插入表格前是否弹出下拉菜单\r\n  columnResizable: true, // 是否允许拖动调整列宽，默认false\r\n  exportAttrString: 'border=\"1\" style=\"border-collapse: collapse\"', // 指定输出HTML时附加到table标签上的属性字符串\r\n};\r\n\r\nBraftEditor.use(Table(options));\r\nclass RichTexts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: BraftEditor.createEditorState(null),\r\n      defaultValue: BraftEditor.createEditorState(null),\r\n    };\r\n\r\n    this.extendControls = [\r\n      {\r\n        key: \"antd-uploader\",\r\n        type: \"component\",\r\n        component: (\r\n          <Upload\r\n            action=\"/api/site/image\"\r\n            accept=\"image/*\"\r\n            onChange={(info) =>\r\n              this.uploadImageChange(info, this.state.editorState)\r\n            }\r\n            showUploadList={false}\r\n            name=\"0\"\r\n            data={{\r\n              name: \"0\",\r\n            }}\r\n          >\r\n            {/* 这里的按钮最好加上type=\"button\"，以避免在表单容器中触发表单提交，用Antd的Button组件则无需如此 */}\r\n            <button\r\n              type=\"button\"\r\n              className=\"control-item button upload-button\"\r\n              data-title=\"插入图片\"\r\n            >\r\n              <PictureOutlined />\r\n            </button>\r\n          </Upload>\r\n        ),\r\n      },\r\n      {\r\n        key: \"antd-directory\",\r\n        type: \"component\",\r\n        component: (\r\n          <Upload\r\n            action=\"/api/site/annex\"\r\n            onChange={(info) =>\r\n              this.uploadFileChange(info, this.state.editorState)\r\n            }\r\n            name=\"0\"\r\n            showUploadList={false}\r\n          >\r\n            {/* 这里的按钮最好加上type=\"button\"，以避免在表单容器中触发表单提交，用Antd的Button组件则无需如此 */}\r\n            <button\r\n              type=\"button\"\r\n              className=\"control-item button upload-button\"\r\n              data-title=\"上传文件\"\r\n            >\r\n              <FolderAddOutlined />\r\n            </button>\r\n          </Upload>\r\n        ),\r\n      },\r\n    ];\r\n  }\r\n\r\n  //图片上传回调\r\n  uploadImageChange = (info, editorState) => {\r\n    if (info.file.status === \"done\") {\r\n      // 富文本图片上传成功，将图片地址加入富文本内容\r\n      let data = ContentUtils.insertMedias(editorState, [\r\n        { type: \"IMAGE\", url: info.file.response.data.url },\r\n      ]);\r\n      this.setState({ editorState: data });\r\n      // 回调给父组件\r\n      this.props.getValue(data.toHTML());\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(\"图片上传失败\");\r\n    }\r\n  };\r\n\r\n  //文件上传回调\r\n  uploadFileChange = (info, editorState) => {\r\n    if (info.file.status === \"done\") {\r\n      // 富文本文件上传成功，将图片地址加入富文本内容\r\n      let data = ContentUtils.insertHTML(\r\n        editorState,\r\n        `<a target=\"_blank\" href=\"${info.file.response.data.url}\">${info.file.response.data.file_name}</a>`\r\n      );\r\n\r\n      this.setState({ editorState: data });\r\n      // 回调给父组件\r\n      this.props.getValue(data.toHTML());\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(\"文件上传失败\");\r\n    }\r\n  };\r\n\r\n  // 内容改变\r\n  onChange = (editorState) => {\r\n    this.setState(\r\n      {\r\n        editorState: editorState,\r\n      },\r\n      this.props.getValue(editorState.toHTML())\r\n    );\r\n  };\r\n\r\n  // 清空编辑器\r\n  clearContent = () => {\r\n    this.setState({ editorState: ContentUtils.clear(this.state.editorState) });\r\n  };\r\n\r\n  // 粘贴图片上传\r\n  myUploadFn = (param) => {\r\n    let obj = new FormData();\r\n    obj.append(\"name\", param.file.name);\r\n    obj.append(\"0\", param.file);\r\n    Axios.post(\"/api/site/image\", obj)\r\n      .then((res) => {\r\n        if (res.data && res.data.code === 0) {\r\n          let data = res.data.data;\r\n          param.success({\r\n            url: data.url,\r\n            meta: {\r\n              id: data.id,\r\n              title: data.name,\r\n              alt: data.name,\r\n            },\r\n          });\r\n        }\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        param.error({\r\n          msg: \"上传失败!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.defaultValue !== this.state.defaultValue) {\r\n      this.setState({\r\n        editorState: BraftEditor.createEditorState(prevProps.defaultValue),\r\n        defaultValue: prevProps.defaultValue,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div id=\"myRitch\">\r\n        <BraftEditor\r\n          value={editorState}\r\n          onChange={this.onChange}\r\n          media={{\r\n            uploadFn: this.myUploadFn,\r\n          }}\r\n          id=\"editor-id\"\r\n          extendControls={this.extendControls}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRichTexts.defaultProps = {\r\n  getValue: (data) => {\r\n    return data;\r\n  },\r\n  defaultValue:''\r\n};\r\n\r\nexport default RichTexts;\r\n"]}]}